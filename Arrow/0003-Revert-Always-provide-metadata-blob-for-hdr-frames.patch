From 3895aa50ab97b0e5803dd37dc332fbd83a06eaa3 Mon Sep 17 00:00:00 2001
From: Astridxx <muratkozan350@gmail.com>
Date: Wed, 4 Oct 2023 15:31:14 +0300
Subject: [PATCH] Revert "Always provide metadata blob for hdr frames"

This reverts commit 7cfd314a58562ebc826313b49da51d32e7913cda.
---
 .../surfaceflinger/DisplayHardware/HWC2.cpp   | 19 ++++++++++---------
 1 file changed, 10 insertions(+), 9 deletions(-)

diff --git a/services/surfaceflinger/DisplayHardware/HWC2.cpp b/services/surfaceflinger/DisplayHardware/HWC2.cpp
index 8364ed9d28..c52e96d146 100644
--- a/services/surfaceflinger/DisplayHardware/HWC2.cpp
+++ b/services/surfaceflinger/DisplayHardware/HWC2.cpp
@@ -826,24 +826,25 @@ Error Layer::setPerFrameMetadata(const int32_t supportedPerFrameMetadata,
                                    mHdrMetadata.cta8613.maxFrameAverageLightLevel}});
     }
 
-    const Error error = static_cast<Error>(
-        mComposer.setLayerPerFrameMetadata(mDisplay->getId(), mId, perFrameMetadatas));
-    if (error != Error::NONE) {
-        return error;
-    }
+    Error error = static_cast<Error>(
+            mComposer.setLayerPerFrameMetadata(mDisplay->getId(), mId, perFrameMetadatas));
 
-    std::vector<Hwc2::PerFrameMetadataBlob> perFrameMetadataBlobs;
     if (validTypes & HdrMetadata::HDR10PLUS) {
         if (CC_UNLIKELY(mHdrMetadata.hdr10plus.size() == 0)) {
             return Error::BAD_PARAMETER;
         }
 
+        std::vector<Hwc2::PerFrameMetadataBlob> perFrameMetadataBlobs;
         perFrameMetadataBlobs.push_back(
                 {Hwc2::PerFrameMetadataKey::HDR10_PLUS_SEI, mHdrMetadata.hdr10plus});
+        Error setMetadataBlobsError =
+                static_cast<Error>(mComposer.setLayerPerFrameMetadataBlobs(mDisplay->getId(), mId,
+                                                                           perFrameMetadataBlobs));
+        if (error == Error::NONE) {
+            return setMetadataBlobsError;
+        }
     }
-
-    return static_cast<Error>(
-            mComposer.setLayerPerFrameMetadataBlobs(mDisplay->getId(), mId, perFrameMetadataBlobs));
+    return error;
 }
 
 Error Layer::setDisplayFrame(const Rect& frame)
